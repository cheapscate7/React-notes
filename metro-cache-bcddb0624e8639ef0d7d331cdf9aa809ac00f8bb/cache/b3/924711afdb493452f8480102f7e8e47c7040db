__d(function (global, require, module, exports, _dependencyMap) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var util_1 = require(_dependencyMap[0], "../../core/util/util");

    var PacketReceiver = function () {
        function PacketReceiver(onMessage_) {
            this.onMessage_ = onMessage_;
            this.pendingResponses = [];
            this.currentResponseNum = 0;
            this.closeAfterResponse = -1;
            this.onClose = null;
        }

        PacketReceiver.prototype.closeAfter = function (responseNum, callback) {
            this.closeAfterResponse = responseNum;
            this.onClose = callback;

            if (this.closeAfterResponse < this.currentResponseNum) {
                this.onClose();
                this.onClose = null;
            }
        };

        PacketReceiver.prototype.handleResponse = function (requestNum, data) {
            var _this = this;

            this.pendingResponses[requestNum] = data;

            var _loop_1 = function _loop_1() {
                var toProcess = this_1.pendingResponses[this_1.currentResponseNum];
                delete this_1.pendingResponses[this_1.currentResponseNum];

                var _loop_2 = function _loop_2(i) {
                    if (toProcess[i]) {
                        util_1.exceptionGuard(function () {
                            _this.onMessage_(toProcess[i]);
                        });
                    }
                };

                for (var i = 0; i < toProcess.length; ++i) {
                    _loop_2(i);
                }

                if (this_1.currentResponseNum === this_1.closeAfterResponse) {
                    if (this_1.onClose) {
                        this_1.onClose();
                        this_1.onClose = null;
                    }

                    return "break";
                }

                this_1.currentResponseNum++;
            };

            var this_1 = this;

            while (this.pendingResponses[this.currentResponseNum]) {
                var state_1 = _loop_1();

                if (state_1 === "break") break;
            }
        };

        return PacketReceiver;
    }();

    exports.PacketReceiver = PacketReceiver;
});