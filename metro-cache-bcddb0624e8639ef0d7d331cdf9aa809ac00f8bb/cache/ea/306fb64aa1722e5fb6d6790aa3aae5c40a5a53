__d(function (global, require, module, exports, _dependencyMap) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var type = require(_dependencyMap[0], "./type");

    function getBlobBuilder() {
        if (typeof BlobBuilder !== 'undefined') {
            return BlobBuilder;
        } else if (typeof WebKitBlobBuilder !== 'undefined') {
            return WebKitBlobBuilder;
        } else {
            return undefined;
        }
    }

    function getBlob() {
        var var_args = [];

        for (var _i = 0; _i < arguments.length; _i++) {
            var_args[_i] = arguments[_i];
        }

        var BlobBuilder = getBlobBuilder();

        if (BlobBuilder !== undefined) {
            var bb = new BlobBuilder();

            for (var i = 0; i < var_args.length; i++) {
                bb.append(var_args[i]);
            }

            return bb.getBlob();
        } else {
            if (type.isNativeBlobDefined()) {
                return new Blob(var_args);
            } else {
                throw Error("This browser doesn't seem to support creating Blobs");
            }
        }
    }

    exports.getBlob = getBlob;

    function sliceBlob(blob, start, end) {
        if (blob.webkitSlice) {
            return blob.webkitSlice(start, end);
        } else if (blob.mozSlice) {
            return blob.mozSlice(start, end);
        } else if (blob.slice) {
            return blob.slice(start, end);
        }

        return null;
    }

    exports.sliceBlob = sliceBlob;
});