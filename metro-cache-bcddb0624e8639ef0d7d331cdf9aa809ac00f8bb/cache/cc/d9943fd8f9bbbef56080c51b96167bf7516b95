__d(function (global, require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _jsxFileName = "/Users/cheapscate7/Documents/React-notes/node_modules/react-native-paper/src/components/Divider.js";

  var _react = require(_dependencyMap[0], "react");

  var React = _interopRequireWildcard(_react);

  var _color = require(_dependencyMap[1], "color");

  var _color2 = _interopRequireDefault(_color);

  var _reactNative = require(_dependencyMap[2], "react-native");

  var _withTheme = require(_dependencyMap[3], "../core/withTheme");

  var _withTheme2 = _interopRequireDefault(_withTheme);

  var _colors = require(_dependencyMap[4], "../styles/colors");

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

  var Divider = function Divider(props) {
    var inset = props.inset,
        style = props.style,
        theme = props.theme;
    var isDarkTheme = theme.dark;
    return React.createElement(_reactNative.View, _extends({}, props, {
      style: [isDarkTheme ? styles.dark : styles.light, inset && styles.inset, style],
      __source: {
        fileName: _jsxFileName,
        lineNumber: 45
      }
    }));
  };

  var styles = _reactNative.StyleSheet.create({
    light: {
      backgroundColor: (0, _color2.default)(_colors.black).alpha(0.12).rgb().string(),
      height: _reactNative.StyleSheet.hairlineWidth
    },
    dark: {
      backgroundColor: (0, _color2.default)(_colors.white).alpha(0.12).rgb().string(),
      height: _reactNative.StyleSheet.hairlineWidth
    },
    inset: {
      marginLeft: 72
    }
  });

  exports.default = (0, _withTheme2.default)(Divider);
});