__d(function (global, require, module, exports, _dependencyMap) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var util_1 = require(_dependencyMap[0], "./util/util");

    var AuthTokenProvider = function () {
        function AuthTokenProvider(app_) {
            this.app_ = app_;
        }

        AuthTokenProvider.prototype.getToken = function (forceRefresh) {
            return this.app_['INTERNAL']['getToken'](forceRefresh).then(null, function (error) {
                if (error && error.code === 'auth/token-not-initialized') {
                    util_1.log('Got auth/token-not-initialized error.  Treating as null token.');
                    return null;
                } else {
                    return Promise.reject(error);
                }
            });
        };

        AuthTokenProvider.prototype.addTokenChangeListener = function (listener) {
            this.app_['INTERNAL']['addAuthTokenListener'](listener);
        };

        AuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {
            this.app_['INTERNAL']['removeAuthTokenListener'](listener);
        };

        AuthTokenProvider.prototype.notifyForInvalidToken = function () {
            var errorMessage = 'Provided authentication credentials for the app named "' + this.app_.name + '" are invalid. This usually indicates your app was not ' + 'initialized correctly. ';

            if ('credential' in this.app_.options) {
                errorMessage += 'Make sure the "credential" property provided to initializeApp() ' + 'is authorized to access the specified "databaseURL" and is from the correct ' + 'project.';
            } else if ('serviceAccount' in this.app_.options) {
                errorMessage += 'Make sure the "serviceAccount" property provided to initializeApp() ' + 'is authorized to access the specified "databaseURL" and is from the correct ' + 'project.';
            } else {
                errorMessage += 'Make sure the "apiKey" and "databaseURL" properties provided to ' + 'initializeApp() match the values provided for your app at ' + 'https://console.firebase.google.com/.';
            }

            util_1.warn(errorMessage);
        };

        return AuthTokenProvider;
    }();

    exports.AuthTokenProvider = AuthTokenProvider;
});